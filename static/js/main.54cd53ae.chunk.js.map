{"version":3,"sources":["Stockservices/stockservice.ts","Stockchart/Chart.tsx","Stockoverview/Overview.tsx","Stockdetail/Stockdetail.tsx","Stocklist/Stocklist.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Stockservice","symbol","Promise","resolve","reject","profileData","console","log","fetch","method","then","response","json","monthlyData","Note","globalData","Stockchart","props","stockservice","lables","opendatas","closedatas","highdatas","lowdatas","lables2","opendatas2","closedatas2","highdatas2","lowdatas2","chartstate","oeffnung","schluss","hoechst","niedrigst","alle","rowProps","horizontal","verticalAlign","tokens","sectionStack","childrenGap","spinnerStack","state","stockdata","stockdata2","chart","chart2","isLoading","this","Chart","className","type","data","chartdata","options","chartoption","CompoundButton","secondaryText","onClick","oeffnung_click","schluss_click","hoechst_click","niedrigst_click","alle_click","Stack","Label","Spinner","size","SpinnerSize","large","nextProps","nextState","loadchart1","loadchart2","symbol2","setState","title","display","text","fontSize","legend","position","labels","datasets","label","fill","borderColor","loadmonthly","Object","keys","key","push","reverse","opendata","closedata","highdata","lowdata","date","renderchart2","catch","note","setTimeout","renderchart1","React","Stockoverview","item","loaditem","companyName","website","Image","src","image","width","height","industry","price","mktCap","sector","description","loadprofile","profile","Stockdetail","globalQuote","quote","loaddetails","open","high","low","volume","latest","close","change","percent","loadglobal","Stocklist","_items","_columns","items","name","fieldName","minWidth","maxWidth","isResizable","DetailsList","columns","setKey","layoutMode","DetailsListLayoutMode","justified","selectionPreservedOnEmptyClick","ariaLabelForSelectionColumn","ariaLabelForSelectAllCheckbox","checkButtonAriaLabel","loadlist","i","App","currentSymbol","currentSymbol2","btnstate","newtext","Fabric","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Form","inline","Button","btnstocklist_click","SearchBox","placeholder","defaultValue","onSearch","newvalue","_onChange","_onChange2","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.54cd53ae.chunk.js","sourcesContent":["\nexport class Stockservice {\n    private static profileData: { [symbol: string]: any } = [];\n    public loadprofile(symbol: string | undefined): Promise<any> {\n        return new Promise<any>((resolve, reject) => {\n\n            if (symbol) {\n                if (Stockservice.profileData[symbol]) {\n                    console.log(\"load from cache\");\n                    resolve(Stockservice.profileData[symbol]);\n                } else { \n                let url = \"https://financialmodelingprep.com/api/v3/company/profile/\" + symbol;\n                fetch(url, { method: \"GET\", }).then(response => response.json())\n                    .then((response) =>{\n            if (!response) {\n                        reject(response)\n                    } else {\n                        Stockservice.profileData[symbol] = response;\n                        resolve(response);\n                    }\n            \n                });\n            }\n        }\n    });    \n\n}\n\n    private static monthlyData: { [symbol: string]: any } = [];\n    public loadmonthly(symbol: string | undefined): Promise<any> {\n        return new Promise<any>((resolve, reject) => {\n            if (symbol) {\n                if (Stockservice.monthlyData[symbol]) {\n                    console.log(\"load from cache\");\n                    resolve(Stockservice.monthlyData[symbol]);\n                } else {\n                    let url = \"https://www.alphavantage.co/query?function=TIME_SERIES_MONTHLY&symbol=\" + symbol + \"&apikey=9ASIMW58ZTJQ0BW5\"\n                    fetch(url, { method: \"GET\", }).then(response => response.json())\n                        .then((response) => {\n                            if (response.Note) {\n                                reject(response.Note)\n                            } else {\n                                Stockservice.monthlyData[symbol] = response;\n                                console.log(Stockservice.monthlyData);\n                                resolve(response);\n                            }\n                        });\n                }\n            }\n        });\n    }\nprivate static globalData: {[symbol: string]: any}=[]\n    public loadglobal(symbol: string | undefined) {\n        return new Promise<any>((resolve, reject) => {\n            if (symbol) {\n                if (Stockservice.globalData[symbol]) {\n                    console.log(\"load from cache\");\n                    resolve(Stockservice.globalData[symbol]);\n                } else {\n                    let url = \"https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=\" + symbol + \"&apikey=9ASIMW58ZTJQ0BW5\"\n                    fetch(url, { method: \"GET\", }).then(response => response.json())\n                        .then((response) => {\n                            if (response.Note) {\n                                reject(response.Note)\n                            } else {\n                                Stockservice.globalData[symbol] = response;\n                                console.log(Stockservice.globalData);\n                                resolve(response);\n                            }\n                        });\n                }\n            }\n        });\n       \n}\n\n}","import * as React from 'react';\nimport { Stockservice } from '../Stockservices/stockservice';\nimport { Chart } from '@bit/primefaces.primereact.chart';\nimport '../App.css'\nimport { CompoundButton } from 'office-ui-fabric-react';\nimport { Spinner, SpinnerSize } from 'office-ui-fabric-react/lib/Spinner';\nimport { IStackProps, Stack } from 'office-ui-fabric-react/lib/Stack';\nimport { Label } from 'office-ui-fabric-react/lib/Label';\nexport interface IStock {\n  opendata: number[];\n  closedata: number[];\n  highdata: number[];\n  lowdata: number[];\n  date: string[];\n}\n\nexport interface IStock2 {\n  opendata: number[];\n  closedata: number[];\n  highdata: number[];\n  lowdata: number[];\n  date: string[];\n}\n\n\nexport interface IChart {\n  chartdata: any;\n  chartoption: any;\n}\n\n\n\nexport interface IChartState {\n  stockdata: IStock | null;\n  stockdata2: IStock2 | null;\n  chart: IChart | null;\n  chart2: IChart | null;\n  isLoading: boolean\n\n}\n\nexport interface IChartProps {\n  symbol: string;\n  symbol2: string;\n  btnstate: boolean;\n}\n\nexport interface IStockButtonState {\n  oeffnung: boolean;\n  schluss: boolean;\n  niedrigst: boolean;\n  hoechst: boolean;\n  alle: boolean;\n\n}\n\n\nexport class Stockchart extends React.Component<IChartProps, IChartState>\n{\n  public stockservice: Stockservice;\n  public lables: Array<string> = [];\n  public opendatas: Array<number> = [];\n  public closedatas: Array<number> = [];\n  public highdatas: Array<number> = [];\n  public lowdatas: Array<number> = [];\n  public lables2: Array<string> = [];\n  public opendatas2: Array<number> = [];\n  public closedatas2: Array<number> = [];\n  public highdatas2: Array<number> = [];\n  public lowdatas2: Array<number> = [];\n\n  public chartstate: IStockButtonState = { oeffnung: true, schluss: false, hoechst: false, niedrigst: false, alle: false }\n  rowProps: IStackProps = { horizontal: true, verticalAlign: 'center' };\n\n  tokens = {\n    sectionStack: {\n      childrenGap: 10\n    },\n    spinnerStack: {\n      childrenGap: 20\n    }\n  };\n\n  constructor(props: IChartProps) {\n    super(props);\n    this.stockservice = new Stockservice();\n\n    this.state =\n    {\n      stockdata: null,\n      stockdata2: null,\n      chart: null,\n      chart2: null,\n      isLoading: true\n\n    };\n\n  }\n  public render(): JSX.Element {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const { stockdata, stockdata2, chart, chart2 } = this.state;\n\n\n    return (\n      <div>{this.state.isLoading === false &&\n          <div>\n          {this.state.chart && this.state.stockdata != null &&\n            <Chart className=\"chart\" type='line' data={this.state.chart.chartdata} options={this.state.chart.chartoption}></Chart>\n          }\n          {this.state.chart2 && this.state.stockdata2 != null &&\n            <Chart className=\"chart\" type='line' data={this.state.chart2.chartdata} options={this.state.chart2.chartoption}></Chart>\n          }\n          \n          <CompoundButton className=\"compoundbutton1\" secondaryText=\"Aktienwert bei Öffnung.\" onClick={() => { this.oeffnung_click() }} >\n            Zeichne\n         </CompoundButton>\n          <CompoundButton className=\"compoundbutton2\" secondaryText=\"Aktienwert bei Schluß.\" onClick={() => { this.schluss_click() }} >\n            Zeichne\n         </CompoundButton>\n          <CompoundButton className=\"compoundbutton3\" secondaryText=\"Höchste Werte.\" onClick={() => { this.hoechst_click() }} >\n            Zeichne\n         </CompoundButton>\n          <CompoundButton className=\"compoundbutton4\" secondaryText=\"Niedrigste Werte.\" onClick={() => { this.niedrigst_click() }} >\n            Zeichne\n         </CompoundButton>\n          <div className=\"buttonalle\">\n            <CompoundButton className=\"compoundbuttonalle\" secondaryText=\"Alle Aktienwerte\" onClick={() => { this.alle_click() }} >\n              Zeichne\n      </CompoundButton>\n          </div>\n         \n        </div>\n      }\n\n\n\n\n\n        <div>{this.state.isLoading === true &&\n          <Stack tokens={this.tokens.sectionStack}>\n            <Stack {...this.rowProps} tokens={this.tokens.spinnerStack}>\n              <Label>Is loadin...</Label>\n              <Spinner size={SpinnerSize.large} />\n            </Stack>\n          </Stack>\n        }\n        </div>\n      </div>\n    );\n\n\n\n\n  }\n  componentWillReceiveProps(nextProps: IChartProps, nextState: IChartState) {\n    console.log(nextProps);\n\n    this.loadchart1(nextProps.symbol);\n    this.loadchart2(nextProps.symbol2);\n\n\n  }\n  renderchart1(opendatas: any, closedatas: any, lowdatas: any, highdatas: any, lables: any) {\n    this.setState({\n      chart: {\n        chartoption: { title: { display: true, text: 'Aktienkurs ' + this.props.symbol, fontSize: 16 }, legend: { position: 'bottom' } },\n        chartdata: {\n          labels: lables, datasets: [\n            { label: 'Aktienwert bei Öffnung', data: opendatas, fill: false, borderColor: 'black' },\n            { label: 'Aktienwert bei Schluß ', data: closedatas, fill: false, borderColor: 'blue' },\n            { label: 'Höschste Aktienwerte  ', data: highdatas, fill: false, borderColor: 'green' },\n            { label: 'Niedrigste Aktienwerte', data: lowdatas, fill: false, borderColor: 'red' },\n          ]\n        }\n      }\n    });\n\n  }\n  renderchart2(opendatas2: any, closedatas2: any, lowdatas2: any, highdatas2: any, lables2: any) {\n    this.setState({\n      chart2: {\n        chartoption: { title: { display: true, text: 'Aktienkurs ' + this.props.symbol2, fontSize: 16 }, legend: { position: 'bottom' } },\n\n        chartdata: {\n          labels: lables2, datasets: [\n            { label: 'Aktienwert bei Öffnung', data: opendatas2, fill: false, borderColor: 'black' },\n            { label: 'Aktienwert bei Schluß ', data: closedatas2, fill: false, borderColor: 'blue' },\n            { label: 'Höschste Aktienwerte  ', data: highdatas2, fill: false, borderColor: 'green' },\n            { label: 'Niedrigste Aktienwerte', data: lowdatas2, fill: false, borderColor: 'red' },\n          ]\n        }\n      }\n    });\n  }\n\n\n  public loadchart2(text: string) {\n    this.opendatas2 = [];\n    this.closedatas2 = [];\n    this.highdatas2 = [];\n    this.lowdatas2 = [];\n    this.lables2 = [];\n\n    this.setState({ isLoading: true })\n\n\n    this.stockservice.loadmonthly(text)!.then((response) => {\n      this.setState({ isLoading: false })\n\n      if (response[\"Monthly Time Series\"]) {\n\n        for (let key of Object.keys(response[\"Monthly Time Series\"])) {\n          this.lables2.push(key)\n\n\n          this.opendatas2.push(response[\"Monthly Time Series\"][key][\"1. open\"]);\n\n          this.closedatas2.push(response[\"Monthly Time Series\"][key][\"4. close\"]);\n\n          this.highdatas2.push(response[\"Monthly Time Series\"][key][\"2. high\"]);\n\n          this.lowdatas2.push(response[\"Monthly Time Series\"][key][\"3. low\"]);\n\n\n\n        }\n\n        this.opendatas2.reverse();\n        this.closedatas2.reverse();\n        this.highdatas2.reverse();\n        this.lowdatas2.reverse();\n        this.lables2.reverse();\n\n        this.setState({ stockdata2: { opendata: this.opendatas2, closedata: this.closedatas2, highdata: this.highdatas2, lowdata: this.lowdatas2, date: this.lables2 } });\n        this.renderchart2(this.opendatas2, this.closedatas2, this.lowdatas2, this.highdatas2, this.lables2);\n\n\n      } else {\n        console.log(response[\"\\\"Error Message\\\"\"])\n\n      }\n\n    }).catch((note) => {\n      setTimeout(() => {\n        this.loadchart2(text);\n      }, 5000);\n    });\n\n  }\n  public loadchart1(text: string) {\n    this.lables = [];\n    this.opendatas = [];\n    this.closedatas = [];\n    this.highdatas = [];\n    this.lowdatas = [];\n\n    this.setState({ isLoading: true })\n    this.stockservice.loadmonthly(text)!.then((response) => {\n      this.setState({ isLoading: false })\n      if (response[\"Monthly Time Series\"]) {\n\n        for (let key of Object.keys(response[\"Monthly Time Series\"])) {\n          this.lables.push(key);\n\n\n          this.opendatas.push(response[\"Monthly Time Series\"][key][\"1. open\"]);\n\n          this.closedatas.push(response[\"Monthly Time Series\"][key][\"4. close\"]);\n\n          this.highdatas.push(response[\"Monthly Time Series\"][key][\"2. high\"]);\n\n          this.lowdatas.push(response[\"Monthly Time Series\"][key][\"3. low\"]);\n\n\n\n        }\n\n        this.opendatas.reverse();\n        this.closedatas.reverse();\n        this.highdatas.reverse();\n        this.lowdatas.reverse();\n        this.lables.reverse();\n\n        this.setState({ stockdata: { opendata: this.opendatas, closedata: this.closedatas, highdata: this.highdatas, lowdata: this.lowdatas, date: this.lables } })\n        this.renderchart1(this.opendatas, this.closedatas, this.lowdatas, this.highdatas, this.lables);\n\n\n      } else {\n        console.log(response[\"\\\"Error Message\\\"\"])\n\n      }\n\n    }).catch((note) => {\n      setTimeout(() => {\n        this.loadchart1(text);\n      }, 5000);\n    });\n\n\n\n\n  }\n  oeffnung_click() {\n    if (this.chartstate!.oeffnung === true) {\n      this.chartstate.hoechst = true;\n      this.chartstate.niedrigst = true;\n      this.chartstate.oeffnung = false;\n      this.chartstate.schluss = true;\n      this.chartstate.alle = true;\n      if (this.state.stockdata) { this.renderchart1(this.state.stockdata!.opendata, null, null, null, this.state.stockdata!.date) }\n      if (this.state.stockdata2) { this.renderchart2(this.state.stockdata2!.opendata, null, null, null, this.state.stockdata2!.date) }\n\n    }\n    else {\n      this.chartstate.hoechst = true;\n      this.chartstate.niedrigst = true;\n      this.chartstate.oeffnung = true;\n      this.chartstate.schluss = true;\n      this.chartstate.alle = true;\n      if (this.state.stockdata) { this.renderchart1(null, null, null, null, null); }\n      if (this.state.stockdata2) { this.renderchart2(null, null, null, null, null); }\n    }\n\n  }\n  schluss_click() {\n    if (this.chartstate.schluss === true) {\n\n\n      this.chartstate.hoechst = true;\n      this.chartstate.niedrigst = true;\n      this.chartstate.oeffnung = true;\n      this.chartstate.schluss = false;\n      this.chartstate.alle = true;\n      if (this.state.stockdata) { this.renderchart1(null, this.state.stockdata!.closedata, null, null, this.state.stockdata!.date) }\n      if (this.state.stockdata2) { this.renderchart2(null, this.state.stockdata2!.closedata, null, null, this.state.stockdata2!.date) }\n\n\n\n    }\n    else {\n\n      this.chartstate.hoechst = true;\n      this.chartstate.niedrigst = true;\n      this.chartstate.oeffnung = true;\n      this.chartstate.schluss = true;\n      this.chartstate.alle = true;\n      if (this.state.stockdata) { this.renderchart1(null, null, null, null, null); }\n      if (this.state.stockdata2) { this.renderchart2(null, null, null, null, null); }\n\n    }\n\n  }\n  hoechst_click() {\n\n    if (this.chartstate.hoechst === true) {\n\n\n      this.chartstate.hoechst = false;\n      this.chartstate.niedrigst = true;\n      this.chartstate.oeffnung = true;\n      this.chartstate.schluss = true;\n      this.chartstate.alle = true;\n      if (this.state.stockdata) { this.renderchart1(null, null, null, this.state.stockdata!.highdata, this.state.stockdata!.date) }\n      if (this.state.stockdata2) { this.renderchart2(null, null, null, this.state.stockdata2!.highdata, this.state.stockdata2!.date) }\n\n\n    }\n    else {\n\n      this.chartstate.hoechst = true;\n      this.chartstate.niedrigst = true;\n      this.chartstate.oeffnung = true;\n      this.chartstate.schluss = true;\n      this.chartstate.alle = true;\n      if (this.state.stockdata) { this.renderchart1(null, null, null, null, null) }\n      if (this.state.stockdata2) { this.renderchart2(null, null, null, null, null) }\n\n\n    }\n\n  }\n  niedrigst_click() {\n    if (this.chartstate.niedrigst === true) {\n\n      this.chartstate.hoechst = true;\n      this.chartstate.niedrigst = false;\n      this.chartstate.oeffnung = true;\n      this.chartstate.schluss = true;\n      this.chartstate.alle = true;\n      if (this.state.stockdata) { this.renderchart1(null, null, this.state.stockdata!.lowdata, null, this.state.stockdata!.date) }\n      if (this.state.stockdata2) { this.renderchart2(null, null, this.state.stockdata2!.lowdata, null, this.state.stockdata2!.date) }\n\n\n    }\n    else {\n\n      this.chartstate.hoechst = true;\n      this.chartstate.niedrigst = true;\n      this.chartstate.oeffnung = true;\n      this.chartstate.schluss = true;\n      this.chartstate.alle = true;\n      if (this.state.stockdata) { this.renderchart1(null, null, null, null, null) }\n      if (this.state.stockdata2) { this.renderchart2(null, null, null, null, null) }\n\n\n    }\n\n  }\n\n  alle_click() {\n\n    if (this.chartstate.alle === true) {\n\n      this.chartstate.hoechst = true;\n      this.chartstate.niedrigst = true;\n      this.chartstate.oeffnung = true;\n      this.chartstate.schluss = true;\n      this.chartstate.alle = false;\n\n      if (this.state.stockdata) { this.renderchart1(this.state.stockdata!.opendata, this.state.stockdata!.closedata, this.state.stockdata!.lowdata, this.state.stockdata!.highdata, this.state.stockdata!.date) }\n      if (this.state.stockdata2) { this.renderchart2(this.state.stockdata2!.opendata, this.state.stockdata2!.closedata, this.state.stockdata2!.lowdata, this.state.stockdata2!.highdata, this.state.stockdata2!.date) }\n\n\n\n    }\n    else {\n\n      this.chartstate.hoechst = true;\n      this.chartstate.niedrigst = true;\n      this.chartstate.oeffnung = true;\n      this.chartstate.schluss = true;\n      this.chartstate.alle = true;\n\n      if (this.state.stockdata) { this.renderchart1(null, null, null, null, null) }\n      if (this.state.stockdata2) { this.renderchart2(null, null, null, null, null) }\n\n\n    }\n\n\n  }\n  componentDidMount() {\n    this.chartstate.oeffnung = true;\n    this.chartstate.schluss = true;\n    this.chartstate.niedrigst = true;\n    this.chartstate.hoechst = true;\n    this.chartstate.alle = false;\n    this.loadchart1(this.props.symbol);\n    this.loadchart2(this.props.symbol2);\n\n  }\n\n\n}\nexport default Stockchart","import * as React from 'react';\nimport { Stockservice } from '../Stockservices/stockservice';\nimport { Image } from 'office-ui-fabric-react/lib/Image';\nimport '../App.css'\nimport { Spinner, SpinnerSize } from 'office-ui-fabric-react/lib/Spinner';\nimport { IStackProps, Stack } from 'office-ui-fabric-react/lib/Stack';\nimport { Label } from 'office-ui-fabric-react/lib/Label';\nexport interface IItem {\n\n    companyName: string;\n    price: number;\n    industry: string;\n    beta: number;\n    mktCap: number\n    sector: string;\n    image: string;\n    description: string;\n    website: string;\n\n}\nexport interface IOverviewState {\n    item: IItem | null;\n    isLoading: boolean;\n\n}\nexport interface IOverviewProps {\n    symbol: string;\n\n}\n\nexport class Stockoverview extends React.Component<IOverviewProps, IOverviewState>\n{\n    public stockservice: Stockservice;\n    rowProps: IStackProps = { horizontal: true, verticalAlign: 'center' };\n\n    tokens = {\n        sectionStack: {\n            childrenGap: 10\n        },\n        spinnerStack: {\n            childrenGap: 20\n        }\n    };\n    constructor(props: IOverviewProps) {\n        super(props);\n        this.stockservice = new Stockservice();\n\n\n        this.state =\n        {\n            item: null,\n            isLoading: true\n        };\n\n\n    }\n\n    componentWillReceiveProps(nextProps: IOverviewProps, nextState: IOverviewState) {\n        //console.log(nextProps);\n\n        this.loaditem(nextProps.symbol);\n\n\n\n    }\n\n    componentDidMount() {\n        this.loaditem(this.props.symbol);\n    }\n\n    public render(): JSX.Element {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { item } = this.state;\n\n        return (\n            <div>{this.state.isLoading === true &&\n                <Stack tokens={this.tokens.sectionStack}>\n                    <Stack {...this.rowProps} tokens={this.tokens.spinnerStack}>\n                        <Label>Is loadin...</Label>\n                        <Spinner size={SpinnerSize.large} />\n                    </Stack>\n                </Stack>\n            }\n\n\n                <div>{this.state.isLoading === false &&\n                    <div>{this.state.item != null &&\n\n                        <div className=\"card card-body\">\n                            <div className=\"card-header\"><b>{this.state.item.companyName}</b>\n                                <div>{this.state.item.website}</div>\n                            </div>\n\n\n\n                            <Image className=\"image\" src={this.state.item.image} width={100}\n                                height={100}  ></Image>\n\n                            <div><b>Branche:</b> {this.state.item.industry}</div>\n                            <div><b>Aktienpreis:</b> {this.state.item.price}</div>\n                            <div><b>Kapital: </b>{this.state.item.mktCap}</div>\n                            <div><b>Sektor: </b>{this.state.item.sector}</div>\n                            <div><b>Beschreibung: </b>{this.state.item.description}</div>\n                        </div>\n\n\n                    }\n                    </div>\n                } </div>\n            </div>\n        );\n    }\n    public loaditem(text: string) {\n        this.setState({isLoading: true})\n        this.stockservice.loadprofile(text)!.then((response) => {\n            this.setState({isLoading: false})\n            if (response) {\n                this.setState({ item: response.profile })\n            }\n        }).catch((note) => {\n            setTimeout(() => {\n                this.loaditem(text);\n            }, 5000);\n        });\n\n    }\n\n\n}\n\n\nexport default Stockoverview","import * as React from 'react';\nimport { Stockservice } from '../Stockservices/stockservice';\nimport { Spinner, SpinnerSize } from 'office-ui-fabric-react/lib/Spinner';\nimport { IStackProps, Stack } from 'office-ui-fabric-react/lib/Stack';\nimport { Label } from 'office-ui-fabric-react/lib/Label';\nimport '../App.css'\n\nexport interface IQuote {\n  symbol: string;\n  open: number;\n  high: number;\n  low: number;\n  price: number;\n  volume: number;\n  latest: string;\n  close: number;\n  change: number;\n  percent: string;\n}\n\nexport interface IStockdetailState {\n\n  quote: IQuote | null;\n  isLoading: boolean\n\n}\n\nexport interface IStockdetailProps {\n\n  symbol: string;\n\n\n}\n\n\n\n\nexport class Stockdetail extends React.Component<IStockdetailProps, IStockdetailState>\n{\n  public stockservice: Stockservice;\n  private globalQuote: any;\n  rowProps: IStackProps = { horizontal: true, verticalAlign: 'center' };\n\n  tokens = {\n    sectionStack: {\n      childrenGap: 10\n    },\n    spinnerStack: {\n      childrenGap: 20\n    }\n  };\n  constructor(props: IStockdetailProps) {\n    super(props);\n    this.stockservice = new Stockservice();\n\n\n    this.state =\n    {\n      quote: this.globalQuote,\n      isLoading: true\n    };\n\n\n  }\n\n  componentWillReceiveProps(nextProps: IStockdetailProps, nextState: IStockdetailState) {\n    //console.log(nextProps);\n\n    this.loaddetails(nextProps.symbol);\n  }\n\n  componentDidMount() {\n    console.log(\"test\");\n    this.loaddetails(this.props.symbol);\n  }\n  public render(): JSX.Element {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const { quote } = this.state;\n    return (\n\n\n\n      <div>{this.state.isLoading === false &&\n        <div>{this.state.quote != null &&\n\n          <div className=\"box\">\n            <div className=\"row\">\n\n              <div className=\"col-md-4\">\n                <div> <b>Firmensymbol:</b> </div>{this.state.quote!.symbol}\n                <div><b>Aktie bei Eröfnung:</b></div>{this.state.quote!.open}\n                <div><b>Höchste Quote:</b></div> {this.state.quote!.high}\n                <div><b>Niedrigste Quote:</b></div>{this.state.quote!.low}\n              </div>\n              <div className=\"col-md-4\">\n                <div><b>Aktienpreis:</b></div>{this.state.quote!.price}\n                <div><b>Aktienvolumen:</b></div>{this.state.quote!.volume}\n                <div><b>Letzter Stand:</b></div>{this.state.quote!.latest}\n                <div><b>Aktie bei Schließung:</b></div>{this.state.quote!.close}\n              </div>\n              <div className=\"col-md-4\">\n                <div><b>Aktienänderung:</b></div><span className={this.state.quote!.change > 0 ? \"classGreen\" : \"classRed\"}>{this.state.quote!.change}</span>\n                <div><b>Aktienänderung in Pozent:</b></div><span className={this.state.quote!.change > 0 ? \"classGreen\" : \"classRed\"}>{this.state.quote!.percent}</span>\n              </div>\n\n            </div>\n          </div>\n        }</div>}\n        <div>{this.state.isLoading === true &&\n          <Stack tokens={this.tokens.sectionStack}>\n            <Stack {...this.rowProps} tokens={this.tokens.spinnerStack}>\n              <Label>Is loadin...</Label>\n              <Spinner size={SpinnerSize.large} />\n            </Stack>\n          </Stack>\n        }</div>\n\n        </div>\n        )\n\n    }\n    public loaddetails(text: string)\n    {\n      this.setState({ isLoading: true })\n      \n      this.stockservice.loadglobal(text)!.then((response) => {\n          this.setState({ isLoading: false })\n        if(response[\"Global Quote\"])\n        {\n          this.globalQuote = {\n            symbol: response[\"Global Quote\"][\"01. symbol\"],\n            open: response[\"Global Quote\"][\"02. open\"],\n            high: response[\"Global Quote\"][\"03. high\"],\n            low: response[\"Global Quote\"][\"04. low\"],\n            price: response[\"Global Quote\"][\"05. price\"],\n            volume: response[\"Global Quote\"][\"06. volume\"],\n            latest: response[\"Global Quote\"][\"07. latest trading day\"],\n            close: response[\"Global Quote\"][\"08. previous close\"],\n            change: response[\"Global Quote\"][\"09. change\"],\n            percent: response[\"Global Quote\"][\"10. change percent\"],\n          }\n      this.setState({quote: this.globalQuote });\n        }\n        else\n     {\n          console.log(response[\"\\\"Error Message\\\"\"])\n         \n\n        }\n        }).catch((note) => {\n          setTimeout(() => {\n            this.loaddetails(text);\n          }, 5000);\n      });\n      }\n      \n  }\nexport default Stockdetail","import * as React from 'react';\nimport '../App.css'\nimport { Stockservice } from '../Stockservices/stockservice';\nimport { DetailsList, DetailsListLayoutMode, IColumn } from 'office-ui-fabric-react/lib/DetailsList';\nimport { Spinner, SpinnerSize } from 'office-ui-fabric-react/lib/Spinner';\nimport { IStackProps, Stack } from 'office-ui-fabric-react/lib/Stack';\nimport { Label } from 'office-ui-fabric-react/lib/Label';\nexport interface IListState {\n  items: IDetailsListBasicExampleItem[]\n  isLoading: boolean\n}\n\nexport interface IListProps {\n  symbol: string;\n\n}\nexport interface IDetailsListBasicExampleItem {\n  key: number;\n  date: string;\n  open: string;\n  close: string;\n  high: string;\n  low: string;\n}\nexport class Stocklist extends React.Component<IListProps, IListState>\n{\n  public stockservice: Stockservice;\n  public lables: string = '';\n  public opendatas: string = '';\n  public closedatas: string = '';\n  public highdatas: string = '';\n  public lowdatas: string = '';\n  private _items: IDetailsListBasicExampleItem[];\n  private _columns: IColumn[];\n  rowProps: IStackProps = { horizontal: true, verticalAlign: 'center' };\n\n  tokens = {\n    sectionStack: {\n      childrenGap: 10\n    },\n    spinnerStack: {\n      childrenGap: 20\n    }\n  };\n  constructor(props: IListProps) {\n    super(props);\n    this.stockservice = new Stockservice();\n    this._items = [];\n    this.state = {\n      items: [],\n      isLoading: true\n    }\n    this._columns = [\n      { key: 'column1', name: 'Datum', fieldName: 'date', minWidth: 80, maxWidth: 80, isResizable: true },\n      { key: 'column2', name: 'Eröffnungswert', fieldName: 'open', minWidth: 80, maxWidth: 80, isResizable: true },\n      { key: 'column3', name: 'Schlußwert', fieldName: 'close', minWidth: 80, maxWidth: 80, isResizable: true },\n      { key: 'column4', name: 'Höchstwert', fieldName: 'high', minWidth: 80, maxWidth: 80, isResizable: true },\n      { key: 'column5', name: 'Niedrigstwert', fieldName: 'low', minWidth: 80, maxWidth: 80, isResizable: true },\n    ];\n  }\n  public render(): JSX.Element {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const { items } = this.state;\n\n    return (\n      <div>{this.state.isLoading === true && \n        <Stack tokens={this.tokens.sectionStack}>\n        <Stack {...this.rowProps} tokens={this.tokens.spinnerStack}>\n           <Label>Is loadin...</Label>\n           <Spinner size={SpinnerSize.large} />\n         </Stack>\n         </Stack>\n      }\n      \n     \n     \n     \n      <div>{this.state.isLoading === false && \n      <DetailsList className='list'\n        items={this.state.items}\n        columns={this._columns}\n        setKey=\"set\"\n        layoutMode={DetailsListLayoutMode.justified}\n        selectionPreservedOnEmptyClick={true}\n        ariaLabelForSelectionColumn=\"Toggle selection\"\n        ariaLabelForSelectAllCheckbox=\"Toggle selection for all items\"\n        checkButtonAriaLabel=\"Row checkbox\"/>\n      }\n      </div>\n     </div>\n\n    );\n  }\n  componentDidMount() {\n    console.log(\"test2\");\n    this.loadlist(this.props.symbol);\n\n\n  }\n  componentWillReceiveProps(nextProps: IListProps, nextState: IListState) {\n    //console.log(nextProps);\n\n    this.loadlist(nextProps.symbol);\n\n  }\n\n  public loadlist(text: string) {\n    this.opendatas = '';\n    this.closedatas = '';\n    this.highdatas = '';\n    this.lowdatas = '';\n    this.lables = '';\n\n    this._items = [];\n    let i = 0;\n    this.setState({isLoading: true})\n\n    this.stockservice.loadmonthly(text)!.then((response) => {\n      this.setState({isLoading: false})\n      if (response[\"Monthly Time Series\"]) {\n\n        for (let key of Object.keys(response[\"Monthly Time Series\"])) {\n          this.lables = (key)\n\n          this.opendatas = (response[\"Monthly Time Series\"][key][\"1. open\"]);\n\n          this.closedatas = (response[\"Monthly Time Series\"][key][\"4. close\"]);\n\n          this.highdatas = (response[\"Monthly Time Series\"][key][\"2. high\"]);\n\n          this.lowdatas = (response[\"Monthly Time Series\"][key][\"3. low\"]);\n\n          this._items.push({\n            key: i++,\n            date: this.lables,\n            open: this.opendatas,\n            close: this.closedatas,\n            high: this.highdatas,\n            low: this.lowdatas\n          });\n\n        }\n        this.setState({ items: this._items })\n      } else {\n        console.log(response[\"\\\"Error Message\\\"\"])\n\n      }\n\n    }).catch((note) => {\n      setTimeout(() => {\n        this.loadlist(text);\n      }, 5000);\n    });\n\n  }\n\n\n}\nexport default Stocklist","import * as React from 'react';\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\nimport Navbar from 'react-bootstrap/Navbar';\nimport { Nav, Form, Button } from 'react-bootstrap';\n//import {stocksymbols} from './data/stockssymbols';\nimport './App.css'\nimport { Stockchart } from './Stockchart/Chart';\nimport { Stockservice } from './Stockservices/stockservice';\nimport { Stockoverview } from './Stockoverview/Overview';\nimport { Stockdetail } from './Stockdetail/Stockdetail';\nimport { Stocklist } from './Stocklist/Stocklist';\nimport { SearchBox } from 'office-ui-fabric-react/lib/SearchBox';\nexport interface IAppState {\n\n\n  currentSymbol: string;\n  currentSymbol2: string;\n  btnstate: boolean;\n}\n\n\n\n\n\nexport class App extends React.Component<{}, IAppState> {\n\n  public stockservice: Stockservice;\n\n  constructor(props: {}) {\n    super(props);\n    this.stockservice = new Stockservice();\n\n\n    this.state = {\n\n\n      currentSymbol: \"TSLA\",\n      currentSymbol2: \"AAPL\",\n      btnstate: true\n    };\n\n\n\n  }\n  private _onChange(newtext: string) {\n\n    this.setState({ currentSymbol: newtext })\n\n\n  };\n\n  private _onChange2(newtext: string) {\n\n    this.setState({ currentSymbol2: newtext })\n\n\n  };\n\n  public btnstocklist_click() {\n    if (this.state.btnstate === true) { this.setState({ btnstate: false }) }\n    else {\n      this.setState({ btnstate: true })\n    }\n\n  }\n  public render(): JSX.Element {\n\n\n    return (\n      <div className=\"conainer\">\n      <Fabric>\n        <Navbar bg=\"light\" expand=\"lg\">\n          <Navbar.Brand href=\"#home\"><h1><b className=\"mainlabel\">Stockcompare</b></h1></Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n\n\n            </Nav>\n            <Form inline>\n\n              <Button className=\"btnstocksymbol\" onClick={() => { this.btnstocklist_click() }}> Ansicht zu Stocksymbols wechseln</Button>\n              <SearchBox\n                className=\"searchbox\"\n                placeholder=\"\"\n                defaultValue=\"TSLA\"\n\n                onSearch={(newvalue: string) => this._onChange(newvalue)}\n\n              />\n              <SearchBox\n                className=\"searchbox\"\n                placeholder=\"\"\n                defaultValue=\"AAPL\"\n                onSearch={(newvalue: string) => this._onChange2(newvalue)}\n\n              />\n\n\n            </Form>\n          </Navbar.Collapse>\n        </Navbar>\n        <div className=\"row\">\n          <div className=\"col-md-4\">\n            <Stockoverview symbol={this.state.currentSymbol}  > </Stockoverview>\n            <Stockdetail symbol={this.state.currentSymbol}> </Stockdetail>\n            <Stocklist symbol={this.state.currentSymbol}></Stocklist>\n          </div>\n          <div className=\"col-md-4\">\n            {this.state.btnstate === true &&\n              <Stockchart btnstate={this.state.btnstate} symbol={this.state.currentSymbol} symbol2={this.state.currentSymbol2}> </Stockchart>\n            }\n            {this.state.btnstate === false &&\n              <iframe src=\"https://datahub.io/core/nasdaq-listings/r/1.html\" width=\"100%\" height=\"100%\"></iframe>\n            }\n\n\n          </div>\n\n          <div className=\"col-md-4\">\n            <Stockoverview symbol={this.state.currentSymbol2}  > </Stockoverview>\n            <Stockdetail symbol={this.state.currentSymbol2}> </Stockdetail>\n            <Stocklist symbol={this.state.currentSymbol2}></Stocklist>\n\n          </div>\n\n\n        </div>\n      </Fabric>\n          </div>\n    );\n  }\n\n\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}